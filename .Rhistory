mgo <- read.table("~/Dropbox/EPFL_MAsem4/1_ATomistic_SIMulation/ATSIM/pb1mgloop3/Mg_results.dat")
View(mgo)
library(plotly)
plot_ly(data = mgo,x=~V1,y=~V2,z=~V3)
View(mgo)
min(mgo$V3)
minmgo <- subset(mgo,V3==min(mgo$V3))
minmgo
minV1 <- subset(mgo,V1==1.61)
plot(minV1$V2,minV1$V3)
c <- polyfit((minV1$V2,minV1$V3, 2)
c <- polyfit(minV1$V2,minV1$V3, 2)
library(pracma)
c <- polyfit(minV1$V2,minV1$V3, 2)
c
-2*c[2]/c[1]
x=minV1$V
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y,col="green")
x=minV1$V
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y,col="green")
data = read.table("p8/results.8A.ibrav8/data",header = TRUE,comment.char = "#")
data <- data[order(data$Deform),]
plot(data$Deform,data$Energy, pch = 1, col="red"   , type="p",
main="Energy convergence",
# ylim=2*c(-err,+err)+abs(ref$MgF),
xlab="Strain [-]",
ylab="Energy [Ry]")
plot(data$Deform,data$Energy, pch = 1, col="red"   , type="p",
main="Energy convergence",
# ylim=2*c(-err,+err)+abs(ref$MgF),
xlab="Strain [-]",
ylab="Energy [Ry]")
dwawd
library(pracma)
data = read.table("p8/results.8A.ibrav8/data",header = TRUE,comment.char = "#")
data <- data[order(data$Deform),]
plot(data$Deform,data$Energy, pch = 1, col="red"   , type="p",
main="Energy convergence",
# ylim=2*c(-err,+err)+abs(ref$MgF),
xlab="Strain [-]",
ylab="Energy [Ry]")
c <- polyfit(data$Deform,data$Energy, 2)
x <- data$Deform
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y, col = "green" )
library(pracma)
data = read.table("p8/results.8A.ibrav8/data",header = TRUE,comment.char = "#")
data <- data[order(data$Deform),]
plot(data$Deform,data$Energy, pch = 1, col="red"   , type="p",
main="Energy convergence",
# ylim=2*c(-err,+err)+abs(ref$MgF),
xlab="Strain [-]",
ylab="Energy [Ry]")
c <- polyfit(data$Deform,data$Energy, 2)
x <- data$Deform
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y, col = "green" )
legend("right",legend = c("Energy","Fit"),lty = c(NA,1),pch = c(1,NA),col = c("red","green"))
a_min=-c[2]/2/c[1]
Cdiff = c[1]*13.605698066*1.6e-19/(8.04475e-10)^3/1e9  # Ry-->eV | eV-->Joules | (V_0)AÂ°^3 --> m^3 | Pa --> GPa
x=minV1$V2
plot(minV1$V2,minV1$V3)
x=minV1$V2
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y,col="green")
y
minV1$V3
plot(minV1$V2,minV1$V3)
x=minV1$V2
c <- polyfit(minV1$V2,minV1$V3, 2)
x=minV1$V2
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y,col="green")
y
minV1$V3
plot(minV1$V2,minV1$V3)
c <- polyfit(minV1$V2,minV1$V3, 2)
x=minV1$V2
y <- c[1]*x^2+c[2]*x+c[3]
lines(x,y,col="green")
lines(x,y,col="green")
y
-2*c[2]/c[1]
c
-2*c[2]/c[1]
x=seq(20,26,length.out = 16)
y <- c[1]*x^2+c[2]*x+c[3]
plot(x,y,col="green")
x=seq(10,26,length.out = 16)
y <- c[1]*x^2+c[2]*x+c[3]
plot(x,y,col="green")
x=seq(0,26,length.out = 16)
y <- c[1]*x^2+c[2]*x+c[3]
plot(x,y,col="green")
x=seq(0,10,length.out = 16)
y <- c[1]*x^2+c[2]*x+c[3]
plot(x,y,col="green")
mgo
View(mgo)
-2*c[2]/c[1]
-2*c[1]/c[2]
-2*c[2]/c[1]
-c[2]/2/c[1]
View(mgo)
